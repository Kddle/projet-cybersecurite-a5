{"version":3,"sources":["Components/LoginPage.js","ContentComponentType.js","Components/LoadingComponent.js","Components/ErrorComponent.js","Components/AddFormComponent.js","Components/DetailComponent.js","Components/NewItemFormComponent.js","Components/ListComponent.js","Components/HomeContainer.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","username","password","formError","errorMsg","handleConnexionClick","bind","assertThisInitialized","onUsernameChanged","onPasswordChanged","event","_this2","preventDefault","length","setState","axios","post","then","res","sessionStorage","setItem","data","pwd","crypto","createHmac","update","digest","loginCb","catch","err","concat","response","status","statusText","target","value","react_default","a","createElement","id","className","action","type","onChange","placeholder","onClick","React","Component","ContentComponentType","LoadingComponent","ErrorComponent","Message","AddFormComponent","_","map","item","i","addItem","key","DetailComponent","error","modalContent","modalType","onInputChanged","rqAddItemArray","deleteItem","showItemDetails","save","cancel","closeModal","addItemArray","obj","split","console","log","assign","get","route","itemId","headers","Authorization","getItem","propertyKey","newArr","filter","tmpData","newData","fromRoute","toRoute","setRoute","callingProperty","_this3","differenceBy","modalCallingProperty","tmp","Array","isArray","push","document","getElementById","click","_this4","put","_this5","objKeys","keys","sort","renderer","Components_LoadingComponent","htmlFor","data-toggle","data-target","arrData","header","j","itemKey","Components_ErrorComponent","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","Components_AddFormComponent","NewItemFormComponent","modalData","modalField","onItemAdded","isNil","forEach","field","copy","el","isEmptyFields","keyId","ListComponent","listHeaders","listContent","getData","delete","cb","rowId","colId","Components_NewItemFormComponent","HomeContainer","displayComponent","apiUrl","componentType","setTimeout","Components_ListComponent","Components_DetailComponent","App","jwtToken","jwtExpirationDate","setAuthInfos","token","Components_HomeContainer","Components_LoginPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94bcd46a.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport crypto from 'crypto';\r\nimport { urls } from '../config';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            username: '',\r\n            password: '',\r\n            formError: false,\r\n            errorMsg: ''\r\n        };\r\n\r\n        this.handleConnexionClick = this.handleConnexionClick.bind(this);\r\n        this.onUsernameChanged = this.onUsernameChanged.bind(this);\r\n        this.onPasswordChanged = this.onPasswordChanged.bind(this);\r\n    }\r\n\r\n    handleConnexionClick(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.username.length === 0 || this.state.password.length === 0) {\r\n            this.setState({\r\n                formError: true,\r\n                errorMsg: \"Veuillez entrer votre nom d'utilisateur et votre mot de passe.\",\r\n                isLoading: false\r\n            });\r\n            return;\r\n        } else {\r\n            if (this.state.formError) {\r\n                this.setState({\r\n                    formError: false,\r\n                    errorMsg: '',\r\n                    isLoading: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    isLoading: true\r\n                });\r\n            }\r\n        }\r\n\r\n        // login\r\n        axios.post('/api/Auth', { username: this.state.username, password: this.state.password })\r\n            .then(res => {\r\n                sessionStorage.setItem('alphapar.token', res.data);\r\n                sessionStorage.setItem('alphapar.username', this.state.username);\r\n                \r\n                const pwd = crypto.createHmac('sha256', this.state.username)\r\n                   .update(this.state.password)\r\n                   .digest('hex');\r\n\r\n                sessionStorage.setItem('alphapar.pwd', pwd);\r\n\r\n                this.props.loginCb(res.data);\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    formError: true,\r\n                    errorMsg: `Error : ${err.response.status} - ${err.response.statusText}`,\r\n                });\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    isLoading: false\r\n                });\r\n            })\r\n\r\n    }\r\n\r\n    onUsernameChanged(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    onPasswordChanged(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"cover\">\r\n                <div id=\"cover-caption\">\r\n                    <div id=\"container\" className=\"container\">\r\n                        <div className=\"row text-white\">\r\n                            <div className=\"col-sm-6 offset-sm-3 text-center\">\r\n                                <h1 className=\"display-4\">Portail AlphaPar</h1>\r\n                                <div className=\"info-form\">\r\n                                    <form action=\"\" className=\"justify-content-center\">\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" className=\"form-control\" value={this.state.username} onChange={this.onUsernameChanged} placeholder=\"Nom d'utilisateur...\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"password\" className=\"form-control\" placeholder=\"Mot de passe...\" value={this.state.password} onChange={this.onPasswordChanged} />\r\n                                        </div>\r\n                                        <button className={`btn btn-success${this.state.isLoading ? ' disabled' : ''}`} onClick={this.handleConnexionClick}>Connexion</button>\r\n                                    </form>\r\n                                    {this.state.formError ? <h6 className=\"login-error\">{this.state.errorMsg}</h6> : null}\r\n                                    {this.state.isLoading ? <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div> : null}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;","export default {\r\n    List: 0,\r\n    Detail: 1\r\n};","import React from 'react';\r\n\r\nclass LoadingComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Loading...</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoadingComponent;","import React from 'react';\r\n\r\nclass ErrorComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>{this.props.data.response.data.Message}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorComponent;","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass AddFormComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>{_.map(this.props.data, (item, i) => {\r\n                return <button onClick={() => this.props.addItem(item)} key={i}>{item[\"Name\"]}</button>\r\n            })}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddFormComponent;","import React from 'react';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport axios from 'axios';\r\nimport ErrorComponent from './ErrorComponent';\r\nimport ContentComponentType from '../ContentComponentType';\r\nimport _ from 'lodash';\r\nimport AddFormComponent from './AddFormComponent';\r\nimport { urls } from '../config';\r\n\r\nclass DetailComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n            error: null,\r\n            modalContent: null,\r\n            modalType: ''\r\n        }\r\n\r\n        this.onInputChanged = this.onInputChanged.bind(this);\r\n        this.rqAddItemArray = this.rqAddItemArray.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.showItemDetails = this.showItemDetails.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.addItemArray = this.addItemArray.bind(this);\r\n    }\r\n\r\n    onInputChanged(event) {\r\n        let obj = {};\r\n        const propName = event.target.id.split('_')[1];\r\n        obj[propName] = event.target.value;\r\n        console.log(obj);\r\n        this.setState({\r\n            data: Object.assign(this.state.data, obj)\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/' + this.props.route + '/' + this.props.itemId, { headers: { \"Authorization\": `Bearer ${sessionStorage.getItem('alphapar.token')}` } })\r\n            .then(response => {\r\n                this.setState({ data: response.data })\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: error\r\n                })\r\n            });\r\n    }\r\n\r\n    deleteItem(itemId, propertyKey) {\r\n        const newArr = _.filter(this.state.data[propertyKey], item => item['ID'] !== itemId);\r\n        const tmpData = {};\r\n        tmpData[propertyKey] = newArr;\r\n\r\n        const newData = Object.assign(tmpData, this.state.data);\r\n        console.log(newData);\r\n        this.setState({\r\n            data: newData\r\n        });\r\n    }\r\n\r\n    showItemDetails(itemId, fromRoute) {\r\n\r\n        const toRoute = fromRoute === 'Customers' ? 'Plans' : 'Machines';\r\n        this.props.setRoute(toRoute, ContentComponentType.Detail, itemId);\r\n    }\r\n\r\n    rqAddItemArray(callingProperty) {\r\n        // get all plans / machines and display on modal\r\n\r\n        const modalType = callingProperty === \"Composition\" ? 'Machines' : callingProperty;\r\n\r\n        console.log('Modal type : ' + modalType);\r\n        axios.get('/api/' + modalType, { headers: { \"Authorization\": `Bearer ${sessionStorage.getItem('alphapar.token')}` } })\r\n            .then(response => {\r\n                console.log(response);\r\n                console.log(this.state.data[callingProperty]);\r\n\r\n                const data = _.differenceBy(response.data, this.state.data[callingProperty], 'ID');\r\n                console.log(data)\r\n\r\n                this.setState({\r\n                    modalType: modalType,\r\n                    modalContent: data,\r\n                    modalCallingProperty: callingProperty\r\n                });\r\n            })\r\n            .catch(error => this.setState({\r\n                error: error\r\n            }));\r\n    }\r\n\r\n    addItemArray(item) {\r\n        let tmp = this.state.data[this.state.modalCallingProperty];\r\n\r\n        if(tmp === null) {\r\n            tmp = []\r\n        }\r\n\r\n        if (Array.isArray(tmp)) {\r\n            tmp.push(item);\r\n            let obj = {};\r\n            obj[this.state.modalCallingProperty] = tmp;\r\n\r\n            this.setState({\r\n                data: Object.assign(this.state.data, obj)\r\n            });\r\n            this.closeModal();\r\n        }\r\n        else {\r\n            console.log('weird behaviour')\r\n        }\r\n\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modalContent: null,\r\n            modalType: '',\r\n            modalCallingProperty: ''\r\n        });\r\n        document.getElementById('closeModalBtn').click();\r\n    }\r\n\r\n    save(event) {\r\n        event.preventDefault();\r\n        axios.put('/api/' + this.props.route, this.state.data, { headers: { \"Authorization\": `Bearer ${sessionStorage.getItem('alphapar.token')}` } })\r\n            .then(response => {\r\n                this.props.setRoute(this.props.route, ContentComponentType.List);\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    error: error\r\n                });\r\n            });\r\n    }\r\n\r\n    cancel(event) {\r\n        event.preventDefault();\r\n        this.props.setRoute(this.props.route, ContentComponentType.List);\r\n    }\r\n\r\n    render() {\r\n        const objKeys = this.state.data !== null ? Object.keys(this.state.data).sort() : [];\r\n\r\n        const renderer = this.state.data === null ? <LoadingComponent /> : (\r\n            <div className=\"details-container\">\r\n                {\r\n                    _.map(objKeys, (key, i) => {\r\n\r\n                        //  Properties to avoid\r\n                        if (key === \"ID\" || key === \"LastUpdated\") return null;\r\n\r\n                        // if property intended to be an array\r\n                        if (this.state.data[key] === null) {\r\n                            if (key === 'Plans' || key === 'Composition') {\r\n                                return (\r\n                                    <div className=\"form-group\" key={i}>\r\n                                        <label htmlFor={`property_${key}`}>{key}</label>\r\n                                        <button type=\"button\" className=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#detailComponentModal\" onClick={() => this.rqAddItemArray(key)}>Add</button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n\r\n                        // If array then display list of objects\r\n                        if (Array.isArray(this.state.data[key])) {\r\n                            const arrData = this.state.data[key];\r\n\r\n                            return (\r\n                                <div className=\"form-group\" key={i}>\r\n                                    <label htmlFor={`property_${key}_${i}`}>{key}</label>\r\n                                    <button type=\"button\" className=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#detailComponentModal\" onClick={() => this.rqAddItemArray(key)}>Add</button>\r\n                                    {arrData.length > 0 ? (\r\n                                        <div className=\"container\" id={`property_${key}_${i}`}>\r\n                                            {/* grid headers */}\r\n                                            <div className=\"row\">\r\n                                                {\r\n                                                    _.map(Object.keys(arrData[0]), header => header === 'ID' || header === 'LastUpdated' ? null : <div className=\"col-md\" key={`arr_header_${header}`}><h4>{header}</h4></div>)\r\n                                                }\r\n                                                <div className=\"col-md\"><h4>Actions</h4></div>\r\n                                            </div>\r\n                                            {\r\n                                                // grid content\r\n                                                _.map(arrData, (item, j) => {\r\n                                                    return (\r\n                                                        <div className=\"row\" key={`${key}_row_${j}`}>\r\n                                                            {\r\n                                                                _.map(Object.keys(item), itemKey => {\r\n                                                                    // properties to avoid\r\n                                                                    if (itemKey === 'ID' || itemKey === \"LastUpdated\") return null;\r\n                                                                    return (\r\n                                                                        <div className=\"col-md\" key={`arr_prop_${itemKey}`}><p>{Array.isArray(item[itemKey]) ? item[itemKey].length : item[itemKey]}</p></div>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                            {/* row actions */}\r\n                                                            <div className=\"col-md\">\r\n                                                                <button className=\"btn btn-danger\" onClick={() => this.deleteItem(item['ID'], key)}>Delete</button>\r\n                                                                <button className=\"btn btn-primary\" onClick={() => this.showItemDetails(item['ID'], this.props.route)}>Details</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    ) : null\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                        // If common property\r\n                        return (\r\n                            <div className=\"form-group\" key={i}>\r\n                                <label htmlFor={`property_${key}`}>{key}</label>\r\n                                <input type=\"text\" value={this.state.data[key]} id={`property_${key}`} onChange={this.onInputChanged} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n\r\n        if (this.state.error !== null) return <ErrorComponent data={this.state.error} />;\r\n\r\n        return (\r\n            <div className=\"details\">\r\n                <h3>{`${this.props.route} #${this.props.itemId}`}</h3>\r\n                <br />\r\n                <div className=\"details-container\">\r\n                    {renderer}\r\n                </div>\r\n                <div className=\"details-action\">\r\n                    <button className=\"btn btn-success\" onClick={this.save}>Save</button>\r\n                    <button className=\"btn btn-danger\" onClick={this.cancel}>Cancel</button>\r\n                </div>\r\n                {/* Modal */}\r\n                <div className=\"modal fade\" id=\"detailComponentModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"detailComponentModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"detailComponentModalLabel\">{`Add ${this.state.modalType}`}</h5>\r\n                                <button id=\"closeModalBtn\" type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {/* Body */}\r\n                                {this.state.modalContent !== null ? <AddFormComponent data={this.state.modalContent} addItem={this.addItemArray} /> : <LoadingComponent />}\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={this.closeModal}>Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DetailComponent;","import React from 'react';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport ErrorComponent from './ErrorComponent';\r\nimport {urls} from '../config';\r\n\r\nclass NewItemFormComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalData: null,\r\n            modalField: null,\r\n            error: null\r\n        }\r\n\r\n        this.addItem = this.addItem.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.onInputChanged = this.onInputChanged.bind(this);\r\n        this.onItemAdded = this.onItemAdded.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!_.isNil(this.props.route)) {\r\n            axios.get('/api/Schema/' + this.props.route, { headers: { \"Authorization\": `Bearer ${sessionStorage.getItem('alphapar.token')}` } })\r\n                .then(response => {\r\n                    let obj = {};\r\n                    if (response.data !== null) {\r\n                        _.forEach(response.data, field => obj[field] = '');\r\n                    }\r\n\r\n                    this.setState({\r\n                        modalField: response.data,\r\n                        modalData: obj\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    console.error(error.response.status + \" - \" + error.response.statusText);\r\n                    this.setState({\r\n                        error: error\r\n                    });\r\n                })\r\n        }\r\n    }\r\n\r\n    onInputChanged(event) {\r\n        let obj = {};\r\n        const propName = event.target.id.split('_')[1];\r\n        obj[propName] = event.target.value;\r\n        this.setState({\r\n            modalData: Object.assign(this.state.modalData, obj)\r\n        });\r\n    }\r\n\r\n    closeModal(event) {\r\n\r\n        if(event)\r\n            event.preventDefault();\r\n\r\n        let copy = this.state.modalData;\r\n\r\n        _.forEach(Object.keys(copy), key => {\r\n            copy[key] = '';\r\n        });\r\n\r\n        this.setState({\r\n            modalData: Object.assign(this.state.modalData, copy)\r\n        });\r\n\r\n        const el = document.getElementById('closeModalBtn');\r\n        \r\n        if(el)\r\n            el.click();\r\n    }\r\n\r\n    onItemAdded(error, response) {\r\n        this.closeModal();\r\n    }\r\n\r\n    addItem(event) {\r\n        event.preventDefault();\r\n\r\n        let isEmptyFields = false;\r\n        _.forEach(Object.keys(this.state.modalData), key => {\r\n            if (this.state.modalData[key] === null) {\r\n                isEmptyFields = true;\r\n                return;\r\n            }\r\n                \r\n            if (this.state.modalData[key].length === 0) {\r\n                isEmptyFields = true;\r\n                return;\r\n            }\r\n        });\r\n        console.log('fin')\r\n\r\n        if(!isEmptyFields) {\r\n            this.props.addItem(this.state.modalData);\r\n            \r\n        } else {\r\n            this.setState({\r\n                error: {\r\n                    response: {\r\n                        data: {\r\n                            \"Message\": \"Please fill in all fields.\"\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const renderer = this.state.modalData === null ? <LoadingComponent /> : (\r\n            <div>\r\n                {\r\n                    _.map(Object.keys(this.state.modalData), (key, keyId) => {\r\n                        return (\r\n                            <div className=\"form-group\" key={keyId}>\r\n                                <label htmlFor={\"field_\" + key}>{key} : </label>\r\n                                <input type=\"text\" id={\"field_\" + key} value={this.state.modalData[key]} onChange={this.onInputChanged} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"listComponentModalLabel\">{`Add ${this.props.route}`}</h5>\r\n                    <button id=\"closeModalBtn\" type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={this.closeModal}>\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {renderer}\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    { this.state.error !== null ? <ErrorComponent data={this.state.error} /> : null}\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={this.addItem}>Add</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={this.closeModal}>Close</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewItemFormComponent;","import React from 'react';\r\nimport axios from 'axios';\r\nimport ErrorComponent from './ErrorComponent';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport _ from 'lodash';\r\nimport ContentComponentType from '../ContentComponentType';\r\nimport NewItemFormComponent from './NewItemFormComponent';\r\nimport { urls } from '../config';\r\n\r\nclass ListComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            listHeaders: [],\r\n            listContent: [],\r\n            error: null\r\n        }\r\n\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.showItemDetails = this.showItemDetails.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n    }\r\n\r\n    deleteItem(id) {\r\n        console.log('Delete requested on item : ' + id);\r\n        console.log('Current state :', this.state);\r\n        console.log('Current props :', this.props);\r\n\r\n        axios.delete('/api/' + this.props.route + '/' + id, { headers: { \"Authorization\": `Bearer ${sessionStorage.getItem('alphapar.token')}` } })\r\n            .then(res => this.props.setRoute(this.props.route, ContentComponentType.List))\r\n            .catch(error => this.setState({\r\n                error: error\r\n            }));\r\n    }\r\n\r\n    showItemDetails(id) {\r\n        console.log('Details requested on item : ' + id);\r\n        console.log('Current state :', this.state);\r\n        console.log('Current props :', this.props);\r\n        this.props.setRoute(this.props.route, ContentComponentType.Detail, id);\r\n    }\r\n\r\n    addItem(data, cb) {\r\n        axios.post('/api/' + this.props.route, data, { headers: { \"Authorization\": `Bearer ${sessionStorage.getItem('alphapar.token')}`}})\r\n        .then(response => {\r\n            document.getElementById('closeModalBtn').click();\r\n            this.props.setRoute(this.props.route, ContentComponentType.List);\r\n            if(cb)\r\n                cb(null, response);          \r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            this.setState({\r\n                error: error\r\n            });\r\n            if(cb)\r\n                cb(error, null)\r\n        });\r\n    }\r\n\r\n    getData() {\r\n        if (sessionStorage.getItem('alphapar.token') !== null) {\r\n            axios.get('/api/' + this.props.route, { headers: { \"Authorization\": `Bearer ${sessionStorage.getItem('alphapar.token')}` } })\r\n                .then(response => {\r\n                    let headers = [];\r\n\r\n                    if (response.data.length > 0) {\r\n                        headers = _.filter(Object.keys(response.data[0]), item => item !== \"ID\");\r\n                    }\r\n\r\n                    this.setState({\r\n                        listHeaders: headers,\r\n                        listContent: response.data,\r\n                        error: null\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.setState({\r\n                        error: error\r\n                    });\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (this.state.error !== null) return <ErrorComponent data={this.state.error} />;\r\n\r\n\r\n        const renderer = (\r\n            <div className=\"list-container\">\r\n                <h3 className=\"list-title\">{this.props.route} :</h3>\r\n                <br />\r\n                <div>\r\n                <button type=\"button\" className=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#listComponentModal\">Add</button>\r\n                </div>\r\n                {\r\n                    this.state.listContent.length === 0 ? <h3>No results.</h3> : (\r\n                        <div className=\"container\">\r\n                            <div className=\"row align-items-center\">\r\n                                {_.map(this.state.listHeaders, header => <div className=\"col-md\" key={header}><h4>{header}</h4></div>)}\r\n                                <div className=\"col col-md\"><h4>Actions</h4></div>\r\n                            </div>\r\n                            {\r\n                                _.map(this.state.listContent, (item, rowId) => {\r\n                                    console.log(item)\r\n                                    return (\r\n                                        <div className=\"row align-items-center\" key={rowId}>\r\n                                            {_.map(this.state.listHeaders, (header, colId) => <div className=\"col-md\" key={rowId + \"_\" + colId}><p>{Array.isArray(item[header]) ? item[header].length : item[header]}</p></div>)}\r\n                                            <div className=\"col-md col\">\r\n                                                <button onClick={() => this.deleteItem(item['ID'])}>Supprimer</button>\r\n                                                <button onClick={() => this.showItemDetails(item['ID'])}>Details</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className=\"modal fade\" id=\"listComponentModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"listComponentModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                            <NewItemFormComponent route={this.props.route} addItem={this.addItem} />\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        return renderer;\r\n    }\r\n}\r\n\r\nexport default ListComponent;","import React from 'react';\r\nimport ContentComponentType from '../ContentComponentType';\r\nimport DetailComponent from './DetailComponent';\r\nimport ListComponent from './ListComponent';\r\n\r\nclass HomeContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            displayComponent: null\r\n        }\r\n\r\n        this.setRoute = this.setRoute.bind(this);\r\n    }\r\n\r\n    setRoute(apiUrl, componentType, itemId) {\r\n        this.setState({\r\n            displayComponent: null\r\n        });\r\n\r\n        setTimeout(() => {\r\n            switch (componentType) {\r\n                case ContentComponentType.List:\r\n                    this.setState({\r\n                        displayComponent: <ListComponent route={apiUrl} setRoute={this.setRoute} />\r\n                    });\r\n                    break;\r\n                case ContentComponentType.Detail:\r\n                    this.setState({\r\n                        displayComponent: <DetailComponent route={apiUrl} setRoute={this.setRoute} itemId={itemId} />\r\n                    });\r\n                    break;\r\n                default:\r\n                    this.setState({\r\n                        displayComponent: <ListComponent route=\"Customers\" setRoute={this.setRoute} />\r\n                    });\r\n                    break;\r\n            }\r\n        }, 10);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setRoute('Customers', ContentComponentType.List);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"home-container\">\r\n                <div id=\"wrapper\" className=\"toggled\">\r\n\r\n                    <div id=\"sidebar-wrapper\">\r\n                        <ul className=\"sidebar-nav\">\r\n                            <li className=\"sidebar-brand\">\r\n                                <button onClick={() => this.setRoute('Customers', ContentComponentType.List)}>Alphapar Portal</button>\r\n                            </li>\r\n                            <li className=\"sidebar-route\">\r\n                                <button onClick={() => this.setRoute('Customers', ContentComponentType.List)}>Clients</button>\r\n                            </li>\r\n                            <li className=\"sidebar-route\">\r\n                                <button onClick={() => this.setRoute('Plans', ContentComponentType.List)}>Plans</button>\r\n                            </li>\r\n                            <li className=\"sidebar-route\">\r\n                                <button onClick={() => this.setRoute('Machines', ContentComponentType.List)}>Machines</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div id=\"page-content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                            {this.state.displayComponent}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeContainer;","import React, { Component } from 'react';\nimport './App.css';\nimport LoginPage from './Components/LoginPage';\nimport HomeContainer from './Components/HomeContainer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jwtToken: null,\n      jwtExpirationDate: null, \n    }\n\n    this.setAuthInfos = this.setAuthInfos.bind(this);\n  }\n\n  setAuthInfos(token) {\n    this.setState({\n      jwtToken: token,\n    });\n  }\n\n  componentDidMount() {\n      if(sessionStorage.getItem('alphapar.token') !== null && this.state.jwtToken === null) {\n        this.setState({\n          jwtToken: sessionStorage.getItem('alphapar.token')\n        });\n      }\n  }\n\n  render() {\n    return (this.state.jwtToken != null ? <HomeContainer /> : <LoginPage loginCb={this.setAuthInfos} />)\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}